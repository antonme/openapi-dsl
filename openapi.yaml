openapi: 3.1.0
info:
  title: Dictionary API
  description: |
    OpenAPI server for dictionary lookups with comprehensive linguistic data.
    
    This API provides access to DSL dictionaries with full preservation of linguistic features
    such as stresses, conjugations, declensions, and other metadata.
    
    ## URL Encoding
    
    IMPORTANT: All non-ASCII characters and spaces in URLs must be properly URL-encoded. 
    For example, the Ossetian word "бастдзинад" should be encoded as "%D0%B1%D0%B0%D1%81%D1%82%D0%B4%D0%B7%D0%B8%D0%BD%D0%B0%D0%B4".
    
    Example of a properly encoded URL:
    ```
    /lookup/%D0%B1%D0%B0%D1%81%D1%82%D0%B4%D0%B7%D0%B8%D0%BD%D0%B0%D0%B4?dictionaries=iron-rus_v16
    ```
    
    ## Filtering Dictionaries
    
    There are two ways to filter dictionaries:
    
    1. Using separate parameters (do NOT use square brackets):
       ```
       /lookup/word?dictionaries=dict1&dictionaries=dict2
       ```
    
    2. Using a comma-separated list:
       ```
       /lookup/word?dict_list=dict1,dict2
       ```
    
    ## Available Endpoints
    
    - `/lookup/{word}` - Direct dictionary lookup for single or multiple words
    - `/search?query=word` - Search within dictionary entries
    - `/prefix-search/{prefix}` - Find words starting with a prefix
    - `/dictionaries` - List all available dictionaries
    - `/list-entries` - Browse dictionary entries with pagination
    
    ## The API supports multiple output formats:
    - Structured output with parsed DSL markup (default)
    - Cleaned markup text with simplified representation
    - Raw dictionary format with original DSL markup
    - HTML output for better display in browsers and JSON viewers
    - Readable text for non-Latin alphabets
    
    ## Available Dictionaries
    
    The API currently provides access to the following dictionaries:
    
    | Dictionary | Display Name | Entry Count | Authors | Publication Year |
    |------------|--------------|-------------|---------|------------------|
    | iron-rus_v16 | Иронско-Русский | 26,785 | Б.Б. Бигулаев, К.Е. Гагкаев, Н.Х. Кулаев, О.Н. Туаева | 1993 (4th ed.) |
    | rus-iron_v16 | Русско-Иронский | 25,225 | В.И. Абаев | 1970 (2nd ed.) |
    | digor-rus_v16 | Дигорско-Русский | 26,827 | Ф.М. Таказов | 2003 |
    | iron_spelling_v16 | Ирон орфографи | 49,771 | - | - |
    | IronParadigms_v16 | ДЗЫРДАРÆЗТ | 2,866 | - | 2009 |
    | IronPhras_v16 | Иронские фразеологизмы | 5,240 | З.Т. Дзабиты | 2003 (2nd ed.) |
    | etnomif_v16 | Этнографи æмæ мифологи | 1,890 | А.Б. Дзадзиев, Х.В. Дзуцев, С.М. Караев | 1994-2005 |
    | lingv_v16 | Лингв. термины (Ru-Os) | 528 | Л.Б. Гацалова | 2007 |
    
    Total entries across all dictionaries: 139,132
    
    ### Dictionary Sources
    
    - **Иронско-Русский**: Осетинско-русский словарь под редакцией А.М. Касаева, Редактор издания Гуриев Т.А. Издательство Северо-Осетинского института гуманитарных исследований, 1993.
    - **Русско-Иронский**: Русско-осетинско словарь. Составил В.И. Абаев. Редактор издания М.И. Исаев. Издательство «Советская энциклопедия», 1970.
    - **Дигорско-Русский**: Дигорско-русский словарь. Составитель Таказов Ф.М. Научный редактор: Гуриев Т.А. Издательство «Алания», 2003.
    - **ДЗЫРДАРÆЗТ**: Словарь словообразования и парадигм осетинского языка. Выпуск приурочен к 150-летию со дня рождения Коста Хетагурова (2009).
    - **Иронские фразеологизмы**: Фразеологический словарь иронского диалекта. Составил Дзабиты З.Т. Редактор издания Дзиццойты Ю.А. Полиграфическое производственное объединение РЮО, 2003.
    - **Этнографи æмæ мифологи**: Составлено из нескольких источников (1994-2005), включая работы Дзадзиева А.Б., Дзуцева Х.В., Караева С.М.
    - **Лингв. термины (Ru-Os)**: Русско-осетинский, осетинско-русский словарь лингвистических терминов. Составил Гацалова Л.Б. РИО СОИГСИ, 2007.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: "http://192.168.1.30:8000"
    description: Ossetian Dictionaries OpenAPI point
  - url: "http://localhost:8000"
    description: Local development server

tags:
  - name: Dictionaries
    description: Operations for listing and retrieving dictionary information
  - name: Dictionary Lookup
    description: Operations for looking up words and phrases in dictionaries
  - name: System
    description: System and health check operations

paths:
  /:
    get:
      tags:
        - System
      summary: Redirect to API documentation
      description: Redirects to the Swagger UI documentation page
      operationId: redirectToApiDocs
      responses:
        '307':
          description: Temporary redirect to documentation
          headers:
            Location:
              schema:
                type: string
              description: URL of the API documentation

  /health:
    get:
      tags:
        - System
      summary: Health check endpoint
      description: Returns the health status of the API
      operationId: healthCheck
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"

  /dictionaries:
    get:
      tags:
        - Dictionaries
      summary: List all available dictionaries
      description: Returns a list of all available dictionaries with their statistics
      operationId: listDictionaries
      responses:
        '200':
          description: Successfully retrieved dictionary list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryList'
              example:
                dictionaries:
                  - name: "iron-rus_v16"
                    display_name: "Иронско-Русский"
                    entry_count: 26785
                    description: "ИРОН-УЫРЫССАГ ДЗЫРДУАТ\nИРОНСКО-РУССКИЙ СЛОВАРЬ: 26785 карточек."
                    language_from: "Russian"
                    language_to: "Russian"
                    file_size: 8071684
                    authors: "Б.Б. Бигулаев, К.Е. Гагкаев, Н.Х. Кулаев, О.Н. Туаева"
                    publication_year: "1993"
                  - name: "rus-iron_v16"
                    display_name: "Русско-Иронский"
                    entry_count: 25225
                    description: "УЫРЫССАГ-ИРОН ДЗЫРДУАТ\nРУССКО-ИРОНСКИЙ СЛОВАРЬ: 25225 карточек."
                    language_from: "Russian"
                    language_to: "Russian"
                    file_size: 8020732
                    authors: "В.И. Абаев"
                    publication_year: "1970"
                total_count: 8
                statistics:
                  total_entries: 139132
                  total_size_bytes: 70746612
                  average_entries_per_dictionary: 17391.5
                  largest_dictionary: "Ирон орфографи"
                  smallest_dictionary: "Лингв. термины (Ru-Os)"
        '500':
          description: Dictionaries not loaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /lookup/{word}:
    get:
      tags:
        - Dictionary Lookup
      summary: Look up a word or phrase
      description: |
        Look up a word or phrase in the dictionaries.
        
        This endpoint handles both single and multi-word queries:
        - Single words are looked up directly
        - Phrases (with spaces in the URL path) are processed by looking up each word individually
        
        This endpoint fully replaces the previous /multi-lookup functionality, with the
        advantage of cleaner URLs and consistent parameter handling.
        
        Returns the complete article with all linguistic data for each matched word.
        
        ## URL Encoding
        Spaces and non-ASCII characters MUST be properly URL-encoded.
        
        ## Example Requests
        
        Single word lookup:
        ```
        GET /lookup/hello?dictionaries=rus-iron_v16
        ```
        
        Multi-word lookup with URL encoding:
        ```
        GET /lookup/hello%20world?dictionaries=rus-iron_v16
        ```
        
        Lookup with dictionary filtering (two ways):
        ```
        GET /lookup/word?dictionaries=iron-rus_v16&dictionaries=rus-iron_v16
        GET /lookup/word?dict_list=iron-rus_v16,rus-iron_v16
        ```
        
        Complete example with multiple parameters:
        ```
        GET /lookup/word?dictionaries=iron-rus_v16&exact_match=true&clean_markup=true&html_output=true
        ```
        
        CURL example:
        ```
        curl -X GET "http://localhost:8000/lookup/hello?dictionaries=rus-iron_v16" -H "accept: application/json"
        ```
      operationId: lookupWord
      parameters:
        - name: word
          in: path
          description: |
            The word or phrase to look up. 
            Can contain spaces to look up multiple words at once (e.g., "hello world").
            URL-encoding is required for non-ASCII characters and spaces.
          required: true
          schema:
            type: string
        - name: dictionaries
          in: query
          description: |
            Filter results to specific dictionaries. Can be used multiple times in a query.
            Example: ?dictionaries=dict1&dictionaries=dict2
            Note: Do NOT use array notation with brackets like ?dictionaries[]=dict1 as this is not supported.
          required: false
          schema:
            type: array
            items:
              type: string
          explode: true  # This means each value gets its own parameter instance
        - name: exact_match
          in: query
          description: Whether to perform exact matching or allow partial matches
          required: false
          schema:
            type: boolean
            default: true
        - name: clean_markup
          in: query
          description: Whether to clean DSL markup tags (like [p], [trn], [com]) in definitions by removing them or converting to simple text. Set to false to see the raw dictionary format.
          required: false
          schema:
            type: boolean
            default: true
        - name: structured
          in: query
          description: Whether to return structured data with parsed DSL markup into separate fields for meanings, translations, etc. Default is True for structured output, set to False for simple format.
          required: false
          schema:
            type: boolean
            default: true
        - name: readable_text
          in: query
          description: Whether to return readable Unicode text instead of escaped characters (helpful for non-Latin alphabets)
          required: false
          schema:
            type: boolean
            default: false
        - name: html_output
          in: query
          description: Whether to convert DSL markup to HTML for better display in browsers and JSON viewers. When set to true, this takes precedence over clean_markup.
          required: false
          schema:
            type: boolean
            default: false
        - name: include_references
          in: query
          description: Whether to include entries referenced in look_for sections (non-recursive)
          required: false
          schema:
            type: boolean
            default: true
        - name: dict_list
          in: query
          description: |
            Comma-separated list of dictionaries to filter by (alternative format).
            Example: ?dict_list=iron-rus_v16,rus-iron_v16
            This is an easier way to specify multiple dictionaries in a single parameter.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully processed the request. Returns matching entries or an empty array if no entries are found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordLookupResponse'
              example:
                entries:
                  - word: "абажур"
                    dictionary: "rus-iron_v16"
                    dictionary_display_name: "Русско-Иронский"
                    part_of_speech:
                      - value: "*(муж.)*"
                        abbreviation: "муж."
                    meanings:
                      - number: 1
                        definition: "*(муж.)*"
                        translations:
                          - text: "абажур, лампæмбæрзæн"
                    html_definition: "<p><i><span class=\"formatted\"><span class=\"translation\" data-num=\"1\"><span class=\"comment\">муж.</span></span></i></p> абажур, лампæмбæрзæн</span></p>"
                query: "абажур"
                count: 1
                dictionaries_searched:
                  - "rus-iron_v16"
                time_taken: 0.0003108978271484375

  /search:
    get:
      tags:
        - Dictionary Lookup
      summary: Search for words or phrases
      description: |
        Search for words or phrases across dictionaries.
        This can search in headwords or definitions based on the exact_match parameter.
        
        ## URL Encoding
        The query parameter and all non-ASCII characters MUST be properly URL-encoded.
        
        ## Example Requests
        
        Basic search:
        ```
        GET /search?query=hello
        ```
        
        Search with dictionary filtering (two ways):
        ```
        GET /search?query=hello&dictionaries=rus-iron_v16&dictionaries=iron-rus_v16
        GET /search?query=hello&dict_list=rus-iron_v16,iron-rus_v16
        ```
        
        Search within definitions with result limit:
        ```
        GET /search?query=world&exact_match=false&limit=5
        ```
        
        Complete example with multiple parameters:
        ```
        GET /search?query=hello&dictionaries=rus-iron_v16&exact_match=false&limit=20&html_output=true
        ```
        
        CURL example:
        ```
        curl -X GET "http://localhost:8000/search?query=hello&dictionaries=rus-iron_v16" -H "accept: application/json"
        ```
      operationId: searchWord
      parameters:
        - name: query
          in: query
          description: Search query to find in dictionary entries
          required: true
          schema:
            type: string
        - name: dictionaries
          in: query
          description: |
            Filter results to specific dictionaries. Can be used multiple times in a query.
            Example: ?dictionaries=dict1&dictionaries=dict2
            Note: Do NOT use array notation with brackets like ?dictionaries[]=dict1 as this is not supported.
          required: false
          schema:
            type: array
            items:
              type: string
          explode: true  # This means each value gets its own parameter instance
        - name: exact_match
          in: query
          description: Whether to perform exact word matching or search within definitions
          required: false
          schema:
            type: boolean
            default: false
        - name: clean_markup
          in: query
          description: Whether to clean DSL markup tags (like [p], [trn], [com]) in definitions by removing them or converting to simple text
          required: false
          schema:
            type: boolean
            default: true
        - name: structured
          in: query
          description: Whether to return structured data with parsed DSL markup into separate fields for meanings, translations, etc. Default is True for structured output, set to False for simple format.
          required: false
          schema:
            type: boolean
            default: true
        - name: limit
          in: query
          description: Maximum number of entries to return
          required: false
          schema:
            type: integer
            default: 10
        - name: readable_text
          in: query
          description: Whether to return readable Unicode text instead of escaped characters (helpful for non-Latin alphabets)
          required: false
          schema:
            type: boolean
            default: false
        - name: html_output
          in: query
          description: Whether to convert DSL markup to HTML for better display in browsers and JSON viewers. When set to true, this takes precedence over clean_markup.
          required: false
          schema:
            type: boolean
            default: false
        - name: include_references
          in: query
          description: Whether to include entries referenced in look_for sections (non-recursive)
          required: false
          schema:
            type: boolean
            default: true
        - name: dict_list
          in: query
          description: |
            Comma-separated list of dictionaries to filter by (alternative format).
            Example: ?dict_list=iron-rus_v16,rus-iron_v16
            This is an easier way to specify multiple dictionaries in a single parameter.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully processed the request. Returns matching entries or an empty array if no entries are found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordLookupResponse'

  /prefix-search/{prefix}:
    get:
      tags:
        - Dictionary Lookup
      summary: Find entries starting with a prefix
      description: |
        Find dictionary entries that start with the given prefix.
        
        This endpoint is useful for:
        - Auto-completion features in UI
        - Browsing dictionaries by letter or partial word
        - Finding all words starting with a specific prefix
        
        Results are limited by the limit parameter (default: 10).
        
        ## URL Encoding
        The prefix parameter and all non-ASCII characters MUST be properly URL-encoded.
        
        ## Example Requests
        
        Basic prefix search:
        ```
        GET /prefix-search/a
        ```
        
        Search with dictionary filtering (two ways):
        ```
        GET /prefix-search/a?dictionaries=rus-iron_v16&dictionaries=iron-rus_v16
        GET /prefix-search/a?dict_list=rus-iron_v16,iron-rus_v16
        ```
        
        Prefix search with increased limit:
        ```
        GET /prefix-search/b?limit=20
        ```
        
        Complete example with multiple parameters:
        ```
        GET /prefix-search/c?dictionaries=rus-iron_v16&limit=15&html_output=true
        ```
        
        CURL example:
        ```
        curl -X GET "http://localhost:8000/prefix-search/a?dictionaries=rus-iron_v16" -H "accept: application/json"
        ```
      operationId: prefixSearch
      parameters:
        - name: prefix
          in: path
          description: Prefix to search for
          required: true
          schema:
            type: string
        - name: dictionaries
          in: query
          description: |
            Filter results to specific dictionaries. Can be used multiple times in a query.
            Example: ?dictionaries=dict1&dictionaries=dict2
            Note: Do NOT use array notation with brackets like ?dictionaries[]=dict1 as this is not supported.
          required: false
          schema:
            type: array
            items:
              type: string
          explode: true  # This means each value gets its own parameter instance
        - name: dict_list
          in: query
          description: |
            Comma-separated list of dictionaries to filter by (alternative format).
            Example: ?dict_list=iron-rus_v16,rus-iron_v16
            This is an easier way to specify multiple dictionaries in a single parameter.
          required: false
          schema:
            type: string
        - name: clean_markup
          in: query
          description: Whether to clean DSL markup tags (like [p], [trn], [com]) in definitions by removing them or converting to simple text
          required: false
          schema:
            type: boolean
            default: true
        - name: structured
          in: query
          description: Whether to return structured data with parsed DSL markup into separate fields for meanings, translations, etc. Default is True for structured output, set to False for simple format.
          required: false
          schema:
            type: boolean
            default: true
        - name: limit
          in: query
          description: Maximum number of entries to return
          required: false
          schema:
            type: integer
            default: 10
        - name: readable_text
          in: query
          description: Whether to return readable Unicode text instead of escaped characters (helpful for non-Latin alphabets)
          required: false
          schema:
            type: boolean
            default: false
        - name: html_output
          in: query
          description: Whether to convert DSL markup to HTML for better display in browsers and JSON viewers. When set to true, this takes precedence over clean_markup.
          required: false
          schema:
            type: boolean
            default: false
        - name: include_references
          in: query
          description: Whether to include entries referenced in look_for sections (non-recursive)
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Successfully processed the request. Returns matching entries or an empty array if no entries are found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordLookupResponse'

  /list-entries:
    get:
      tags:
        - Dictionary Lookup
      summary: List entries from dictionaries
      description: |
        List entries from dictionaries with pagination support.
        This endpoint is useful for browsing all entries in a dictionary.
        
        ## Example Requests
        
        List entries from all dictionaries (first page):
        ```
        GET /list-entries
        ```
        
        List entries from a specific dictionary:
        ```
        GET /list-entries?dict_name=rus-iron_v16
        ```
        
        Paginated listing:
        ```
        GET /list-entries?dict_name=rus-iron_v16&page=2&page_size=30
        ```
        
        Complete example with multiple parameters:
        ```
        GET /list-entries?dict_name=rus-iron_v16&page=3&page_size=50&html_output=true
        ```
        
        CURL example:
        ```
        curl -X GET "http://localhost:8000/list-entries?dict_name=rus-iron_v16&page=1" -H "accept: application/json"
        ```
      operationId: listEntries
      parameters:
        - name: dict_name
          in: query
          description: Dictionary to list entries from. If not provided, lists from all dictionaries.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Number of entries per page
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: clean_markup
          in: query
          description: Whether to clean DSL markup tags (like [p], [trn], [com]) in definitions by removing them or converting to simple text
          required: false
          schema:
            type: boolean
            default: true
        - name: structured
          in: query
          description: Whether to return structured data with parsed DSL markup into separate fields for meanings, translations, etc. Default is True for structured output, set to False for simple format.
          required: false
          schema:
            type: boolean
            default: true
        - name: readable_text
          in: query
          description: Whether to return readable Unicode text instead of escaped characters (helpful for non-Latin alphabets)
          required: false
          schema:
            type: boolean
            default: false
        - name: html_output
          in: query
          description: Whether to convert DSL markup to HTML for better display in browsers and JSON viewers. When set to true, this takes precedence over clean_markup.
          required: false
          schema:
            type: boolean
            default: false
        - name: include_references
          in: query
          description: Whether to include entries referenced in look_for sections (non-recursive)
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Successfully retrieved paginated entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntriesResponse'
        '404':
          description: Dictionary not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      properties:
        detail:
          type: string
          description: Error message details
      required:
        - detail

    DictionaryInfo:
      type: object
      properties:
        name:
          type: string
          description: Dictionary name
        display_name:
          type: string
          description: Human-readable dictionary name
        entry_count:
          type: integer
          description: Number of entries in the dictionary
        description:
          type: string
          nullable: true
          description: Dictionary description
        language_from:
          type: string
          description: Source language
        language_to:
          type: string
          nullable: true
          description: Target language for bilingual dictionaries
        file_size:
          type: integer
          description: Dictionary file size in bytes
      required:
        - name
        - display_name
        - entry_count
        - language_from
        - file_size

    DictionaryList:
      type: object
      properties:
        dictionaries:
          type: array
          items:
            $ref: '#/components/schemas/DictionaryInfo'
          description: List of available dictionaries
        total_count:
          type: integer
          description: Total number of dictionaries
        statistics:
          type: object
          properties:
            total_entries:
              type: integer
              description: Total number of entries across all dictionaries
            total_size_bytes:
              type: integer
              description: Total size of all dictionaries in bytes
            average_entries_per_dictionary:
              type: number
              format: float
              description: Average number of entries per dictionary
            largest_dictionary:
              type: string
              description: Name of the dictionary with the most entries
            smallest_dictionary:
              type: string
              description: Name of the dictionary with the fewest entries
          description: Additional statistics about the dictionaries
      required:
        - dictionaries
        - total_count

    PartOfSpeech:
      type: object
      properties:
        value:
          type: string
          description: Part of speech value (e.g., noun, verb)
        abbreviation:
          type: string
          nullable: true
          description: Abbreviation (e.g., n., v.)
      required:
        - value

    Translation:
      type: object
      properties:
        text:
          type: string
          description: Translation text
        examples:
          type: array
          items:
            type: string
          nullable: true
          description: Usage examples
      required:
        - text

    Meaning:
      type: object
      properties:
        number:
          type: integer
          nullable: true
          description: Meaning number for words with multiple meanings
        definition:
          type: string
          nullable: true
          description: Definition text
        look_for:
          type: array
          items:
            type: string
          nullable: true
          description: Words or phrases to look up as cross-references
        translations:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
          nullable: true
          description: Translations
        examples:
          type: array
          items:
            type: string
          nullable: true
          description: Usage examples

    StructuredWordEntry:
      type: object
      properties:
        word:
          type: string
          description: The word or phrase
        dictionary:
          type: string
          description: Source dictionary name
        dictionary_display_name:
          type: string
          description: Human-readable dictionary name
        part_of_speech:
          type: array
          items:
            $ref: '#/components/schemas/PartOfSpeech'
          nullable: true
          description: Parts of speech
        meanings:
          type: array
          items:
            $ref: '#/components/schemas/Meaning'
          nullable: true
          description: Word meanings
        pronunciation:
          type: string
          nullable: true
          description: Pronunciation
        etymology:
          type: string
          nullable: true
          description: Etymology information
        html_definition:
          type: string
          description: HTML-formatted definition with all linguistic data
      required:
        - word
        - dictionary
        - dictionary_display_name
        - html_definition

    WordEntry:
      type: object
      properties:
        word:
          type: string
          description: The word or phrase
        dictionary:
          type: string
          description: Source dictionary name
        dictionary_display_name:
          type: string
          description: Human-readable dictionary name
        definition:
          description: Complete definition with all linguistic data
      required:
        - word
        - dictionary
        - dictionary_display_name
        - definition

    WordLookupResponse:
      type: object
      properties:
        entries:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/WordEntry'
              - $ref: '#/components/schemas/StructuredWordEntry'
          description: List of matching entries
        query:
          type: string
          description: Original query
        count:
          type: integer
          description: Number of entries found
        dictionaries_searched:
          type: array
          items:
            type: string
          description: Names of dictionaries searched
        time_taken:
          type: number
          format: float
          description: Time taken for the lookup in seconds
      required:
        - entries
        - query
        - count
        - dictionaries_searched
        - time_taken

    PaginatedEntriesResponse:
      type: object
      properties:
        entries:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/WordEntry'
              - $ref: '#/components/schemas/StructuredWordEntry'
          description: List of entries
        total_count:
          type: integer
          description: Total number of entries
        page:
          type: integer
          description: Current page number
        page_size:
          type: integer
          description: Number of entries per page
        has_next:
          type: boolean
          description: Whether there are more entries to fetch
        dictionary:
          type: string
          nullable: true
          description: Dictionary that was queried
        time_taken:
          type: number
          format: float
          description: Time taken for the lookup in seconds
      required:
        - entries
        - total_count
        - page
        - page_size
        - has_next
        - time_taken 